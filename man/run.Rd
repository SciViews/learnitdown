% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run}
\alias{run}
\alias{run_app}
\alias{update_pkg}
\title{Run learnitdown learnr tutorials or Shiny apps from a package after update}
\usage{
run(
  tutorial,
  package,
  github_repos = NULL,
  ...,
  update = ask,
  ask = interactive(),
  upgrade = "never"
)

run_app(
  app,
  package,
  github_repos = NULL,
  ...,
  update = ask,
  ask = interactive(),
  upgrade = "never",
  in.job = TRUE
)

update_pkg(package, github_repos, upgrade = "never")
}
\arguments{
\item{tutorial}{The name of the tutorial to use. If not provided, a list of
available tutorials is displayed.}

\item{package}{The package from where to run the tutorial.}

\item{github_repos}{The GitHub repository where the package is developed (for
updates), use \code{NULL} to prevent any updates.}

\item{...}{Further arguments passed to \code{\link[=run_tutorial]{run_tutorial()}} (for learnrs), or to
\code{\link[=runApp]{runApp()}} (for Shiny applications).}

\item{update}{Do we check for an updated version first, and if it is found,
update the package automatically?}

\item{ask}{In case \code{tutorial} or \code{app} is not provided, do we ask to select
in a list?}

\item{upgrade}{When a new version of the main package is found, do we also upgrade
dependencies ? By default, never, but use \code{"ask"} to ask user.}

\item{app}{The name of the Shiny application to run. If not provided, a list
of available apps is displayed.}

\item{in.job}{Should the application be run in a Job in RStudio (\code{TRUE} by
default)?}
}
\value{
The result returned by \code{\link[=run_tutorial]{run_tutorial()}} for \code{\link[=run]{run()}}, or by
\code{\link[=runApp]{runApp()}} for \code{\link[=run_app]{run_app()}}. The \code{\link[=update]{update()}} function return \code{TRUE} or
\code{FALSE}, depending if the package is updated or not.
}
\description{
These functions are convenient in the framework of a course whose learnrs and
Shiny applications may be updated during the course. The \code{\link[=update]{update()}} function
checks if an update is available (respecting the version of R), and the
\code{\link[=run]{run()}} (for learnrs), or \code{\link[=runApp]{runApp()}} (for Shiny applications) manage to
run the item in a friendly way.
}
\examples{
\dontrun{
#' # To start from a list of available tutorials:
run(package = "my_package")
run("my_tutorial", package = "my_package")
run_app(package = "mypackage")
run_app("my_shiny_app", package = "mypackage")
}
}
\seealso{
\code{\link[=run_tutorial]{run_tutorial()}}, \code{\link[=runApp]{runApp()}}
}
\concept{run interactive learnr documents from the BioDataScience package}
\keyword{utilities}
