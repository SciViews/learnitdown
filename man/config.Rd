% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/config.R
\name{config}
\alias{config}
\alias{sign_in}
\alias{sign_out}
\alias{encrypt}
\alias{decrypt}
\alias{lock}
\alias{unlock}
\title{Configure the R environment for the course (including database information)
and provide (or cache) user information in ciphered form.}
\usage{
config(
  url,
  password,
  cache = file.path(tempdir(), ".learnitdown_config"),
  debug = Sys.getenv("LEARNITDOWN_DEBUG", 0) != 0
)

sign_in(
  data,
  password,
  cipher = "aes-256-cbc",
  iv = NULL,
  cache = file.path(tempdir(), ".learnitdown_user"),
  debug = Sys.getenv("LEARNITDOWN_DEBUG", 0) != 0
)

sign_out(
  title = "Signing out",
  message = "Do you really want to sign out with learnitdown?",
  cache = file.path(tempdir(), ".learnitdown_user"),
  debug = Sys.getenv("LEARNITDOWN_DEBUG", 0) != 0
)

encrypt(
  object,
  password,
  cipher = "aes-256-cbc",
  iv = NULL,
  serialize = TRUE,
  base64 = FALSE,
  url.encode = FALSE
)

decrypt(
  object,
  password,
  cipher = "aes-256-cbc",
  iv = NULL,
  unserialize = TRUE,
  base64 = FALSE,
  url.decode = FALSE
)

lock(
  object,
  password,
  key = "",
  message = "Password for learnitdown:",
  reset = FALSE
)

unlock(
  object,
  password,
  key = "",
  message = "Password for learnitdown:",
  reset = FALSE
)
}
\arguments{
\item{url}{The URL of the encrypted file that contains the configuration
information.}

\item{password}{The password to crypt, decrypt, lock or unlock the data.}

\item{cache}{The path to the file to use to store a cached version of these
data. Access to the database will be checked, and if it fails, the
configuration data are refreshed from the URL.}

\item{debug}{Do we issue debugging messages? By default, it is set according
to the \code{LEARNITDOWN_DEBUG} environment variable (yes, if this variable is not
\code{0}).}

\item{data}{The fingerprint data in clear or ciphered form (in this case, the
string must start with "fingerprint=").}

\item{cipher}{The cryptography algorithm to use.}

\item{iv}{The initialization vector for the cipher.}

\item{title}{The title of the dialog box prompting to sign out.}

\item{message}{The message of the dialog box prompting to sign out, or asking
for a password.}

\item{object}{An object to be encrypted, decrypted, locked or unlocked.}

\item{serialize}{Do we serialize \code{object} before ciphering it (\code{TRUE} by
default)?}

\item{base64}{Do we encode/decode base64 the object (\code{FALSE} by default)?}

\item{url.encode}{Do we encode for URL (query) use (\code{FALSE} by default) ?}

\item{unserialize}{Do we unserialize the resulting object after deciphering
it (\code{TRUE} by default)?}

\item{url.decode}{Do we decode URL before deciphering it (\code{FALSE} by
default)?}

\item{key}{The key that stores the password. It is advised to use something
like \code{course_year}, so that you can manage different passwords for the same
course given at different academic years. Using a key, the course password
must be entered only once. If not provided, the password is not stored. Note
also that the name of an environment variable could be used too for the key.
This is convenient on a server like RStudio Connect, for instance.}

\item{reset}{Should we reset the password (\code{FALSE} by default)?}
}
\value{
Invisibly returns \code{TRUE} if success, or \code{FALSE} otherwise for
\code{\link[=config]{config()}}. The encrypted/decrypted object for \code{\link[=encrypt]{encrypt()}} and \code{\link[=decrypt]{decrypt()}},
or the locked/unlocked object for \code{\link[=lock]{lock()}} and \code{\link[=unlock]{unlock()}}.
The user information for \code{\link[=sign_in]{sign_in()}}.
}
\description{
Call these functions every time you need to get environment variables set,
like the URL, user and password of the MongoDB database used by the course.
}
